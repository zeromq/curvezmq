curve_client(3)
===============

NAME
----
curve_client - Secure client socket

SYNOPSIS
--------
----
//  Create a new client instance, providing its permanent keypair
CZMQ_EXPORT curve_client_t *
    curve_client_new (curve_keypair_t *keypair);

//  Destructor
CZMQ_EXPORT void
    curve_client_destroy (curve_client_t **self_p);

//  Set metadata property, to be sent to server on connect
CZMQ_EXPORT void
    curve_client_set_metadata (curve_client_t *self, char *name, char *format, ...);

//  Create outgoing connection to server, providing server permanent
//  public key
CZMQ_EXPORT void
    curve_client_connect (curve_client_t *self, char *endpoint, byte *server_key);

//  Close outgoing connection to server
CZMQ_EXPORT void
    curve_client_disconnect (curve_client_t *self);

//  Send message to server, takes ownership of message
CZMQ_EXPORT int
    curve_client_send (curve_client_t *self, zmsg_t **msg_p);

//  Wait for message from server
CZMQ_EXPORT zmsg_t *
    curve_client_recv (curve_client_t *self);

//  Get socket handle, for polling
CZMQ_EXPORT void *
    curve_client_handle (curve_client_t *self);

//  Self test of this class
void
    curve_client_test (bool verbose);
----

DESCRIPTION
-----------

Implements a secure client socket, doing I/O in the background. This is
a high-level class intended for applications. It wraps the curve_codec
class, and runs it across a DEALER socket to connect to a curve_server
socket at the other end.


EXAMPLE
-------
.From curve_client_test method
----
    curve_keypair_t *client_keypair = curve_keypair_new ();
    curve_client_t *client = curve_client_new (client_keypair);
    curve_client_set_metadata (client, "Client", "CURVEZMQ/curve_client");
    curve_client_set_metadata (client, "Identity", "E475DA11");
    curve_keypair_destroy (&client_keypair);

    curve_keypair_t *server_keypair = curve_keypair_new ();
    curve_server_t *server = curve_server_new (server_keypair);
    curve_server_set_metadata (server, "Server", "CURVEZMQ/curve_server");
    curve_keypair_destroy (&server_keypair);

    curve_client_destroy (&client);
    curve_server_destroy (&server);
----

SEE ALSO
--------
linkczmq:czmq[7]
