curve_keypair(3)
================

NAME
----
curve_keypair - keypair management

SYNOPSIS
--------
----
//  Constructor, creates a new public/secret key pair
CZMQ_EXPORT curve_keypair_t *
    curve_keypair_new (void);
//  Constructor, accepts public/secret key pair from caller
CZMQ_EXPORT curve_keypair_t *
    curve_keypair_new_from (byte *public_key, byte *secret_key);

//  Destructor
CZMQ_EXPORT void
    curve_keypair_destroy (curve_keypair_t **self_p);

//  Return public part of key pair
CZMQ_EXPORT byte *
    curve_keypair_public (curve_keypair_t *self);

//  Return secret part of key pair
CZMQ_EXPORT byte *
    curve_keypair_secret (curve_keypair_t *self);

//  Return copy of keypair
CZMQ_EXPORT curve_keypair_t *
    curve_keypair_dup (curve_keypair_t *self);

//  Return true if two keypairs are identical
CZMQ_EXPORT bool
    curve_keypair_eq (curve_keypair_t *self, curve_keypair_t *compare);

//  Print contents of keypair to stderr for debugging
CZMQ_EXPORT void
    curve_keypair_dump (curve_keypair_t *self);

//  Send keypair over socket as two-part message
CZMQ_EXPORT int
    curve_keypair_send (curve_keypair_t *self, void *pipe);

//  Receive keypair off socket, return new keypair or NULL if error
CZMQ_EXPORT curve_keypair_t *
    curve_keypair_recv (void *pipe);

//  Self test of this class
void
    curve_keypair_test (bool verbose);
----

DESCRIPTION
-----------

Works with a public-secret keypair.


EXAMPLE
-------
.From curve_keypair_test method
----
    curve_keypair_t *keypair = curve_keypair_new ();
    assert (curve_keypair_public (keypair));
    assert (curve_keypair_secret (keypair));

    curve_keypair_t *shadow = curve_keypair_new_from (
        curve_keypair_public (keypair),
        curve_keypair_secret (keypair));
    assert (curve_keypair_eq (keypair, shadow));
    curve_keypair_destroy (&shadow);

    shadow = curve_keypair_dup (keypair);
    assert (curve_keypair_eq (keypair, shadow));
    curve_keypair_destroy (&shadow);

    curve_keypair_destroy (&keypair);

----

SEE ALSO
--------
linkczmq:czmq[7]
