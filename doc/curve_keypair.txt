curve_keypair(3)
================

NAME
----
curve_keypair - keypair management

SYNOPSIS
--------
----
//  Constructor, creates a new public/secret key pair
CZMQ_EXPORT curve_keypair_t *
    curve_keypair_new (void);
    
//  Destructor
CZMQ_EXPORT void
    curve_keypair_destroy (curve_keypair_t **self_p);

//  Save key pair to disk
CZMQ_EXPORT int
    curve_keypair_save (curve_keypair_t *self);

//  Constructor, load key pair from disk
CZMQ_EXPORT curve_keypair_t *
    curve_keypair_load (void);

//  Return public part of key pair
CZMQ_EXPORT byte *
    curve_keypair_public (curve_keypair_t *self);
    
//  Return secret part of key pair
CZMQ_EXPORT byte *
    curve_keypair_secret (curve_keypair_t *self);
    
//  Self test of this class
void
    curve_keypair_test (bool verbose);
----

DESCRIPTION
-----------

Works with a public-secret keypair.


EXAMPLE
-------
.From curve_keypair_test method
----
    //  Generate new long-term key pair for our test server
    //  The key pair will be stored in "secret.key"
    curve_keypair_t *keypair = curve_keypair_new ();
    int rc = curve_keypair_save (keypair);
    assert (rc == 0);
    assert (zfile_exists ("secret.key"));
    assert (curve_keypair_secret (keypair));
    assert (curve_keypair_public (keypair));
    curve_keypair_destroy (&keypair);
    //  Done, clean-up
    zfile_delete ("public.key");
    zfile_delete ("secret.key");
----

SEE ALSO
--------
linkczmq:czmq[7]
